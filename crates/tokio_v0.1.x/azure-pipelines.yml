trigger: ["master"]
pr: ["master"]

variables:
  RUSTFLAGS: -Dwarnings
  nightly: nightly-2020-01-25

jobs:
# Test top level crate
- template: ci/azure-test-stable.yml
  parameters:
    name: test_tokio
    rust: stable
    displayName: Test tokio
    cross: true
    crates:
      - tokio
      - tests-integration

<<<<<<< HEAD
# Test sub crates
=======
# Test crates that are platform specific
- template: ci/azure-test-stable.yml
  parameters:
    name: test_sub_cross
    displayName: Test sub crates -
    cross: true
    crates:
      - tokio-fs
      - tokio-process
      - tokio-reactor
      - tokio-signal
      - tokio-tcp
      # - tokio-tls
      - tokio-udp
      - tokio-uds

# Test crates that are NOT platform specific
>>>>>>> e096857bc25c075b1b62e88811fc6fc0c42905b5
- template: ci/azure-test-stable.yml
  parameters:
    name: test_linux
    displayName: Test sub crates -
    rust: stable
    crates:
      - tokio-macros
      - tokio-test
<<<<<<< HEAD
      - tokio-util
      - examples
=======
>>>>>>> e096857bc25c075b1b62e88811fc6fc0c42905b5

# Run integration tests
- template: ci/azure-test-integration.yml
  parameters:
    name: test_integration
    displayName: Integration tests
    rust: stable

# Run tests from `tests-build`. This requires a different process
- template: ci/azure-test-build.yml
  parameters:
    name: test_build
    displayName: Test build permutations
    rust: stable
<<<<<<< HEAD

# Run miri tests
- template: ci/azure-miri.yml
  parameters:
    name: miri

=======
    crates:
      tokio:
        - codec
        - fs
        - io
        - reactor
        - rt-full
        - tcp
        - timer
        - udp
        - uds
        - sync
        - experimental-tracing
      tokio-buf:
        - util

>>>>>>> e096857bc25c075b1b62e88811fc6fc0c42905b5
# Try cross compiling
- template: ci/azure-cross-compile.yml
  parameters:
    name: cross
    rust: stable

# Check each feature works properly
- template: ci/azure-check-features.yml
  parameters:
    rust: $(nightly)
    name: check_features

# This represents the minimum Rust version supported by
# Tokio. Updating this should be done in a dedicated PR and
# cannot be greater than two 0.x releases prior to the
# current stable.
#
# Tests are not run as tests may require newer versions of
# rust.
- template: ci/azure-check-minrust.yml
  parameters:
    name: minrust
<<<<<<< HEAD
    rust: 1.39.0
=======
    rust_version: 1.31.0
>>>>>>> e096857bc25c075b1b62e88811fc6fc0c42905b5

# Check formatting
- template: ci/azure-rustfmt.yml
  parameters:
    rust: stable
    name: rustfmt

# Apply clippy lints to all crates
- template: ci/azure-clippy.yml
  parameters:
    rust: stable
    name: clippy

# Check doc generation
- template: ci/azure-check-docs.yml
  parameters:
    rust: $(nightly)
    name: docs

# - template: ci/azure-tsan.yml
#   parameters:
#     name: tsan
#     rust: stable

# Run loom tests
- template: ci/azure-loom.yml
  parameters:
    name: loom
    rust: stable

- template: ci/azure-deploy-docs.yml
  parameters:
    rust: stable
    dependsOn:
      - rustfmt
      - docs
      - clippy
      - test_tokio
      - test_linux
<<<<<<< HEAD
      - test_integration
      - test_build
      - loom
      - miri
      - cross
=======
      - features
      - cross_32bit_linux
>>>>>>> e096857bc25c075b1b62e88811fc6fc0c42905b5
      - minrust
      - check_features
#      - tsan
