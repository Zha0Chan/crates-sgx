[package]
name = "run-tests-enclave"
version = "1.0.0"
edition = "2018"

[lib]
name = "run_tests_enclave"
crate-type = ["staticlib"]

[workspace] 

[features]
default = ["mesalock_sgx", "crates_unittest", "inventory"]
mesalock_sgx = ["sgx_tstd", "sgx_libc", "sgx_signal"]



[dependencies]
env_logger = { path = "../../../env_logger" }
time = { path = "../../../time-0.1" }
tokio = { path = "../../tokio" }
inventory = { version = "0.1.6", optional = true }
crates_unittest = { git = "https://github.com/Zha0Chan/crates-sgx-unittest.git", optional = true, default-features = true}
futures = { path = "../../../futures-rs_01"}
tokio-io = { path = "../../tokio-io" }
tokio-timer = { path = "../../tokio-timer" }
tokio-executor = { path = "../../tokio-executor" }
bytes = { path = "../../../bytes-0.4.x" }
tokio-codec = { path = "../../tokio-codec" }
tokio-threadpool = { path = "../../tokio-threadpool" }
mio = { path = "../../../mio-0.6.x" }
tokio-reactor = { path = "../../tokio-reactor" }
tokio-tcp = { path = "../../tokio-tcp" }
tokio-buf = { path = "../../tokio-buf" }
tokio-mock-task = { path = "../../../tokio-mock-task" }
tokio-current-thread = { path = "../../tokio-current-thread"}
tokio-fs = { path = "../../tokio-fs"}
tokio-signal = { path = "../../tokio-signal"}
tempfile = { path = "../../../tempfile" }
rand = { path = "../../../rand-0.7.3" }
tokio-sync = { path = "../../tokio-sync"}
tokio-udp = { path = "../../tokio-udp"}
tokio-uds = { path = "../../tokio-uds"}
net2 = { path = "../../../net2-rs" }
[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_types = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", tag = "v1.1.2" }
sgx_tstd = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", tag = "v1.1.2", optional = true, features = ["thread", "untrusted_fs", "untrusted_time", "net"] }
sgx_libc = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", tag = "v1.1.2", optional = true }
sgx_signal = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", tag = "v1.1.2", optional = true }